#%%
import hashlib
import json
import sys
import cv2
from glob import glob
import os
import datetime

output_root = sys.argv[1]
filename = sys.argv[2]
def get_md5(fp):
   return hashlib.md5(cv2.imread(fp).tobytes()).hexdigest()
def convert_file_names(fp):
   fname = os.path.basename(fp)
   idx = int(fname.split(".")[0].split("_")[1])
   return f"frame_{idx:06d}.png"

output_fp = f"{output_root}/{filename}"
path=f"{output_root}/videos_gpu/recon/*.png"
files = glob(path)
hash_dict = {convert_file_names(f): get_md5(f) for f in files}

path=f"{output_root}/images_gpu/recon/*.png"
files = glob(path)

hash_dict.update({
   "description": "Content of this file is generated by gen_md5_ref.py on the dgx1 with GPU enabled. The md5 hashes are from the reconstructed images of the encoder.", 
   "timestamp":str(datetime.datetime.now())
   })
hash_dict.update({os.path.basename(f): get_md5(f) for f in files})
hash_dict=dict(sorted(hash_dict.items(), key=lambda item: item[0]))
with open(output_fp, "w") as f:
   json.dump(hash_dict, f)

print(f"Md5 hashes saved to {output_fp}")

   
# %%
